# ================================
# APPLICATION CONFIGURATION
# ================================
# General configuration for the application
spring.application.name=chatop
# Port on which the application will run (default: 3001)
server.port=${APP_PORT:3001}

# ================================
# DATABASE CONFIGURATION
# ================================
# MySQL database connection details.
# Ensure these variables are set in your environment or provide them here.
# Database URL (e.g., jdbc:mysql://localhost:3306/my_database)
# DB_PORT: Optional, defaults to 3306 (the standard MySQL port)
spring.datasource.url=jdbc:mysql://${DB_ADDRESS:localhost}:${DB_PORT:3306}/${DB_NAME}
# Database username (required)
spring.datasource.username=${DB_USERNAME}
# Database password (required)
spring.datasource.password=${DB_PASSWORD}

# Hibernate and SQL initialization
spring.sql.init.mode=always
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Automatically create the database schema (use "update" for production)
spring.jpa.hibernate.ddl-auto=create
# Log SQL statements to the console (useful for debugging)
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ================================
# JWT CONFIGURATION
# ================================
# Encryption key for signing and verifying JWTs (required).
# Must be a Base64-encoded 256-bit key.
encryption.key=${ENCRYPTION_KEY}

# ================================
# API DOCUMENTATION
# ================================
# Swagger UI and API documentation paths
springdoc.swagger-ui.path=/api/swagger-ui
springdoc.api-docs.path=/api/api-docs

# ================================
# FILE UPLOAD CONFIGURATION
# ================================
app.base-url=http://localhost
# Physical directory where uploaded files will be stored (default: uploads/rentals)
file.upload-dir=${UPLOAD_DIR:uploads/rentals}
# Public path for accessing uploaded files
file.upload-relative-path=uploads/rentals
# Maximum file size for uploads
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=1MB